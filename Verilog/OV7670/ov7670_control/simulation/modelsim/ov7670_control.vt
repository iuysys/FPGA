// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/19/2018 20:38:18"
                                                                                
// Verilog Test Bench template for design : ov7670_control
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module ov7670_control_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg INIT_DONE;
reg RD_FRAME;
reg RST_N;
reg SYS_CLK;
reg WR_FRAME;
// wires                                               
wire INIT_EN;
wire READ_EN;
wire RUN_EN;
wire R_IDLE;

// assign statements (if any)                          
ov7670_control i1 (
// port map - connection between master ports and signals/registers   
	.INIT_DONE(INIT_DONE),
	.INIT_EN(INIT_EN),
	.RD_FRAME(RD_FRAME),
	.READ_EN(READ_EN),
	.RST_N(RST_N),
	.RUN_EN(RUN_EN),
	.SYS_CLK(SYS_CLK),
	.WR_FRAME(WR_FRAME),
	.R_IDLE(R_IDLE)
);

initial                                                
begin                                                  
	INIT_DONE = 0 ;
	RD_FRAME = 0 ;
	RST_N = 1 ;
	SYS_CLK = 1 ;
	WR_FRAME = 0 ;  
	#100 RST_N = 0 ;
	#20 RST_N = 1 ;
	
	#10 INIT_DONE = 1 ;
	#10 WR_FRAME = 1 ;
	#10 RD_FRAME = 1 ;
	
$display("Running testbench");                       
end                                                    

always 
	#1 SYS_CLK = ~ SYS_CLK ;







                                              
endmodule

