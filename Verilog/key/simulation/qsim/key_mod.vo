// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "05/06/2018 17:32:02"

// 
// Device: Altera EP2C8Q208C8 Package PQFP208
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module key_mod (
	CLK,
	RST_N,
	key,
	key_press);
input 	CLK;
input 	RST_N;
input 	key;
output 	key_press;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \time_count[0]~10_combout ;
wire \time_count[1]~12_combout ;
wire \time_count[2]~14_combout ;
wire \time_count[3]~16_combout ;
wire \time_count[4]~18_combout ;
wire \time_count[5]~20_combout ;
wire \time_count[6]~22_combout ;
wire \Mux2~0_combout ;
wire \LessThan0~0_combout ;
wire \CLK~combout ;
wire \key~combout ;
wire \time_count[0]~11 ;
wire \time_count[1]~13 ;
wire \time_count[2]~15 ;
wire \time_count[3]~17 ;
wire \time_count[4]~19 ;
wire \time_count[5]~21 ;
wire \time_count[6]~23 ;
wire \time_count[7]~24_combout ;
wire \RST_N~combout ;
wire \Decoder0~0_combout ;
wire \time_count[7]~25 ;
wire \time_count[8]~26_combout ;
wire \time_count[8]~27 ;
wire \time_count[9]~28_combout ;
wire \LessThan0~1_combout ;
wire \Mux1~8_combout ;
wire \s_now~0_combout ;
wire \s_now~regout ;
wire \s_last~regout ;
wire \Mux2~1_combout ;
wire \Mux2~2_combout ;
wire \key_press~0_combout ;
wire \key_press~reg0_regout ;
wire [9:0] time_count;
wire [2:0] step_cnt;


cycloneii_lcell_ff \time_count[3] (
	.clk(\CLK~combout ),
	.datain(\time_count[3]~16_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[3]));

cycloneii_lcell_ff \time_count[4] (
	.clk(\CLK~combout ),
	.datain(\time_count[4]~18_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[4]));

cycloneii_lcell_ff \time_count[5] (
	.clk(\CLK~combout ),
	.datain(\time_count[5]~20_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[5]));

cycloneii_lcell_ff \time_count[6] (
	.clk(\CLK~combout ),
	.datain(\time_count[6]~22_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[6]));

cycloneii_lcell_ff \time_count[2] (
	.clk(\CLK~combout ),
	.datain(\time_count[2]~14_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[2]));

cycloneii_lcell_ff \time_count[1] (
	.clk(\CLK~combout ),
	.datain(\time_count[1]~12_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[1]));

cycloneii_lcell_ff \time_count[0] (
	.clk(\CLK~combout ),
	.datain(\time_count[0]~10_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[0]));

cycloneii_lcell_comb \time_count[0]~10 (
// Equation(s):
// \time_count[0]~10_combout  = time_count[0] $ (VCC)
// \time_count[0]~11  = CARRY(time_count[0])

	.dataa(time_count[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\time_count[0]~10_combout ),
	.cout(\time_count[0]~11 ));
// synopsys translate_off
defparam \time_count[0]~10 .lut_mask = 16'h55AA;
defparam \time_count[0]~10 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \time_count[1]~12 (
// Equation(s):
// \time_count[1]~12_combout  = (time_count[1] & (!\time_count[0]~11 )) # (!time_count[1] & ((\time_count[0]~11 ) # (GND)))
// \time_count[1]~13  = CARRY((!\time_count[0]~11 ) # (!time_count[1]))

	.dataa(time_count[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[0]~11 ),
	.combout(\time_count[1]~12_combout ),
	.cout(\time_count[1]~13 ));
// synopsys translate_off
defparam \time_count[1]~12 .lut_mask = 16'h5A5F;
defparam \time_count[1]~12 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \time_count[2]~14 (
// Equation(s):
// \time_count[2]~14_combout  = (time_count[2] & (\time_count[1]~13  $ (GND))) # (!time_count[2] & (!\time_count[1]~13  & VCC))
// \time_count[2]~15  = CARRY((time_count[2] & !\time_count[1]~13 ))

	.dataa(time_count[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[1]~13 ),
	.combout(\time_count[2]~14_combout ),
	.cout(\time_count[2]~15 ));
// synopsys translate_off
defparam \time_count[2]~14 .lut_mask = 16'hA50A;
defparam \time_count[2]~14 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \time_count[3]~16 (
// Equation(s):
// \time_count[3]~16_combout  = (time_count[3] & (!\time_count[2]~15 )) # (!time_count[3] & ((\time_count[2]~15 ) # (GND)))
// \time_count[3]~17  = CARRY((!\time_count[2]~15 ) # (!time_count[3]))

	.dataa(time_count[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[2]~15 ),
	.combout(\time_count[3]~16_combout ),
	.cout(\time_count[3]~17 ));
// synopsys translate_off
defparam \time_count[3]~16 .lut_mask = 16'h5A5F;
defparam \time_count[3]~16 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \time_count[4]~18 (
// Equation(s):
// \time_count[4]~18_combout  = (time_count[4] & (\time_count[3]~17  $ (GND))) # (!time_count[4] & (!\time_count[3]~17  & VCC))
// \time_count[4]~19  = CARRY((time_count[4] & !\time_count[3]~17 ))

	.dataa(time_count[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[3]~17 ),
	.combout(\time_count[4]~18_combout ),
	.cout(\time_count[4]~19 ));
// synopsys translate_off
defparam \time_count[4]~18 .lut_mask = 16'hA50A;
defparam \time_count[4]~18 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \time_count[5]~20 (
// Equation(s):
// \time_count[5]~20_combout  = (time_count[5] & (!\time_count[4]~19 )) # (!time_count[5] & ((\time_count[4]~19 ) # (GND)))
// \time_count[5]~21  = CARRY((!\time_count[4]~19 ) # (!time_count[5]))

	.dataa(time_count[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[4]~19 ),
	.combout(\time_count[5]~20_combout ),
	.cout(\time_count[5]~21 ));
// synopsys translate_off
defparam \time_count[5]~20 .lut_mask = 16'h5A5F;
defparam \time_count[5]~20 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \time_count[6]~22 (
// Equation(s):
// \time_count[6]~22_combout  = (time_count[6] & (\time_count[5]~21  $ (GND))) # (!time_count[6] & (!\time_count[5]~21  & VCC))
// \time_count[6]~23  = CARRY((time_count[6] & !\time_count[5]~21 ))

	.dataa(time_count[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[5]~21 ),
	.combout(\time_count[6]~22_combout ),
	.cout(\time_count[6]~23 ));
// synopsys translate_off
defparam \time_count[6]~22 .lut_mask = 16'hA50A;
defparam \time_count[6]~22 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (step_cnt[1] & !\key~combout )

	.dataa(step_cnt[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(\key~combout ),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'h00AA;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = ((!time_count[3] & (!time_count[4] & !time_count[5]))) # (!time_count[6])

	.dataa(time_count[3]),
	.datab(time_count[4]),
	.datac(time_count[5]),
	.datad(time_count[6]),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h01FF;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \CLK~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CLK~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CLK));
// synopsys translate_off
defparam \CLK~I .input_async_reset = "none";
defparam \CLK~I .input_power_up = "low";
defparam \CLK~I .input_register_mode = "none";
defparam \CLK~I .input_sync_reset = "none";
defparam \CLK~I .oe_async_reset = "none";
defparam \CLK~I .oe_power_up = "low";
defparam \CLK~I .oe_register_mode = "none";
defparam \CLK~I .oe_sync_reset = "none";
defparam \CLK~I .operation_mode = "input";
defparam \CLK~I .output_async_reset = "none";
defparam \CLK~I .output_power_up = "low";
defparam \CLK~I .output_register_mode = "none";
defparam \CLK~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \key~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\key~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key));
// synopsys translate_off
defparam \key~I .input_async_reset = "none";
defparam \key~I .input_power_up = "low";
defparam \key~I .input_register_mode = "none";
defparam \key~I .input_sync_reset = "none";
defparam \key~I .oe_async_reset = "none";
defparam \key~I .oe_power_up = "low";
defparam \key~I .oe_register_mode = "none";
defparam \key~I .oe_sync_reset = "none";
defparam \key~I .operation_mode = "input";
defparam \key~I .output_async_reset = "none";
defparam \key~I .output_power_up = "low";
defparam \key~I .output_register_mode = "none";
defparam \key~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \time_count[7]~24 (
// Equation(s):
// \time_count[7]~24_combout  = (time_count[7] & (!\time_count[6]~23 )) # (!time_count[7] & ((\time_count[6]~23 ) # (GND)))
// \time_count[7]~25  = CARRY((!\time_count[6]~23 ) # (!time_count[7]))

	.dataa(time_count[7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[6]~23 ),
	.combout(\time_count[7]~24_combout ),
	.cout(\time_count[7]~25 ));
// synopsys translate_off
defparam \time_count[7]~24 .lut_mask = 16'h5A5F;
defparam \time_count[7]~24 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_io \RST_N~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\RST_N~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RST_N));
// synopsys translate_off
defparam \RST_N~I .input_async_reset = "none";
defparam \RST_N~I .input_power_up = "low";
defparam \RST_N~I .input_register_mode = "none";
defparam \RST_N~I .input_sync_reset = "none";
defparam \RST_N~I .oe_async_reset = "none";
defparam \RST_N~I .oe_power_up = "low";
defparam \RST_N~I .oe_register_mode = "none";
defparam \RST_N~I .oe_sync_reset = "none";
defparam \RST_N~I .operation_mode = "input";
defparam \RST_N~I .output_async_reset = "none";
defparam \RST_N~I .output_power_up = "low";
defparam \RST_N~I .output_register_mode = "none";
defparam \RST_N~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (step_cnt[0] & !step_cnt[1])

	.dataa(step_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(step_cnt[1]),
	.cin(gnd),
	.combout(\Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~0 .lut_mask = 16'h00AA;
defparam \Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \time_count[7] (
	.clk(\CLK~combout ),
	.datain(\time_count[7]~24_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[7]));

cycloneii_lcell_comb \time_count[8]~26 (
// Equation(s):
// \time_count[8]~26_combout  = (time_count[8] & (\time_count[7]~25  $ (GND))) # (!time_count[8] & (!\time_count[7]~25  & VCC))
// \time_count[8]~27  = CARRY((time_count[8] & !\time_count[7]~25 ))

	.dataa(time_count[8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[7]~25 ),
	.combout(\time_count[8]~26_combout ),
	.cout(\time_count[8]~27 ));
// synopsys translate_off
defparam \time_count[8]~26 .lut_mask = 16'hA50A;
defparam \time_count[8]~26 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_ff \time_count[8] (
	.clk(\CLK~combout ),
	.datain(\time_count[8]~26_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[8]));

cycloneii_lcell_comb \time_count[9]~28 (
// Equation(s):
// \time_count[9]~28_combout  = time_count[9] $ (\time_count[8]~27 )

	.dataa(time_count[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\time_count[8]~27 ),
	.combout(\time_count[9]~28_combout ),
	.cout());
// synopsys translate_off
defparam \time_count[9]~28 .lut_mask = 16'h5A5A;
defparam \time_count[9]~28 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_ff \time_count[9] (
	.clk(\CLK~combout ),
	.datain(\time_count[9]~28_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(\LessThan0~1_combout ),
	.sload(gnd),
	.ena(\Decoder0~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(time_count[9]));

cycloneii_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (!time_count[8] & (!time_count[9] & ((\LessThan0~0_combout ) # (!time_count[7]))))

	.dataa(\LessThan0~0_combout ),
	.datab(time_count[7]),
	.datac(time_count[8]),
	.datad(time_count[9]),
	.cin(gnd),
	.combout(\LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h000B;
defparam \LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux1~8 (
// Equation(s):
// \Mux1~8_combout  = (step_cnt[1] & (((!\key~combout )))) # (!step_cnt[1] & (step_cnt[0] & ((\LessThan0~1_combout ))))

	.dataa(step_cnt[0]),
	.datab(step_cnt[1]),
	.datac(\key~combout ),
	.datad(\LessThan0~1_combout ),
	.cin(gnd),
	.combout(\Mux1~8_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~8 .lut_mask = 16'h2E0C;
defparam \Mux1~8 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \step_cnt[1] (
	.clk(\CLK~combout ),
	.datain(\Mux1~8_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(step_cnt[1]));

cycloneii_lcell_comb \s_now~0 (
// Equation(s):
// \s_now~0_combout  = !\key~combout 

	.dataa(\key~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\s_now~0_combout ),
	.cout());
// synopsys translate_off
defparam \s_now~0 .lut_mask = 16'h5555;
defparam \s_now~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff s_now(
	.clk(\CLK~combout ),
	.datain(\s_now~0_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\s_now~regout ));

cycloneii_lcell_ff s_last(
	.clk(\CLK~combout ),
	.datain(\s_now~regout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\s_last~regout ));

cycloneii_lcell_comb \Mux2~1 (
// Equation(s):
// \Mux2~1_combout  = (\s_now~regout  & (!step_cnt[1] & (!step_cnt[0] & !\s_last~regout )))

	.dataa(\s_now~regout ),
	.datab(step_cnt[1]),
	.datac(step_cnt[0]),
	.datad(\s_last~regout ),
	.cin(gnd),
	.combout(\Mux2~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~1 .lut_mask = 16'h0002;
defparam \Mux2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = (\Mux2~0_combout ) # ((\Mux2~1_combout ) # ((\Decoder0~0_combout  & !\LessThan0~1_combout )))

	.dataa(\Mux2~0_combout ),
	.datab(\Mux2~1_combout ),
	.datac(\Decoder0~0_combout ),
	.datad(\LessThan0~1_combout ),
	.cin(gnd),
	.combout(\Mux2~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~2 .lut_mask = 16'hEEFE;
defparam \Mux2~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \step_cnt[0] (
	.clk(\CLK~combout ),
	.datain(\Mux2~2_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(step_cnt[0]));

cycloneii_lcell_comb \key_press~0 (
// Equation(s):
// \key_press~0_combout  = (step_cnt[1] & (!\key~combout  & ((\key_press~reg0_regout ) # (!step_cnt[0])))) # (!step_cnt[1] & (((\key_press~reg0_regout ))))

	.dataa(\key~combout ),
	.datab(step_cnt[1]),
	.datac(step_cnt[0]),
	.datad(\key_press~reg0_regout ),
	.cin(gnd),
	.combout(\key_press~0_combout ),
	.cout());
// synopsys translate_off
defparam \key_press~0 .lut_mask = 16'h7704;
defparam \key_press~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \key_press~reg0 (
	.clk(\CLK~combout ),
	.datain(\key_press~0_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\key_press~reg0_regout ));

cycloneii_io \key_press~I (
	.datain(!\key_press~reg0_regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_press));
// synopsys translate_off
defparam \key_press~I .input_async_reset = "none";
defparam \key_press~I .input_power_up = "low";
defparam \key_press~I .input_register_mode = "none";
defparam \key_press~I .input_sync_reset = "none";
defparam \key_press~I .oe_async_reset = "none";
defparam \key_press~I .oe_power_up = "low";
defparam \key_press~I .oe_register_mode = "none";
defparam \key_press~I .oe_sync_reset = "none";
defparam \key_press~I .operation_mode = "output";
defparam \key_press~I .output_async_reset = "none";
defparam \key_press~I .output_power_up = "low";
defparam \key_press~I .output_register_mode = "none";
defparam \key_press~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
