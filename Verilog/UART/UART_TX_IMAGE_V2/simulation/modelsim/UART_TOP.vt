// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/19/2018 11:50:56"
                                                                                
// Verilog Test Bench template for design : UART_TOP
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module UART_TOP_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg [7:0] FIFO_DATA;
reg RST_N;
reg SYS_CLK;
reg WRCLK;
reg WRREQ;
// wires                                               
wire TXD;
wire WRFULL;

// assign statements (if any)                          
UART_TOP i1 (
// port map - connection between master ports and signals/registers   
	.FIFO_DATA(FIFO_DATA),
	.RST_N(RST_N),
	.SYS_CLK(SYS_CLK),
	.TXD(TXD),
	.WRCLK(WRCLK),
	.WRFULL(WRFULL),
	.WRREQ(WRREQ)
);
//------------------------------------------------------
//-- 
//------------------------------------------------------ 
initial
begin
	FIFO_DATA = 8'haa;
	RST_N = 1;
	SYS_CLK = 1;
	WRCLK = 1;
	WRREQ = 0;
	#100 RST_N = 0;
	#10 RST_N = 1;
	#100 WRREQ = 1;
end 
//------------------------------------------------------
//-- 
//------------------------------------------------------   
always
begin
	#1 SYS_CLK <= ~ SYS_CLK ;
	if(WRFULL == 1'B1)
		WRREQ = 0;
	else
		WRREQ = 1;
end
always
begin
	#10 WRCLK <= ~ WRCLK ;
end
//------------------------------------------------------
//-- 
//------------------------------------------------------ 	


	
endmodule



























