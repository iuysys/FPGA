// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/19/2018 11:12:35"
                                                                                
// Verilog Test Bench template for design : UART_TXD
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module UART_TXD_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg [7:0] DATA_IN;
reg RST_N;
reg SYS_CLK;
reg TX_REQ;
// wires                                               
wire RDCLK;
wire RDREQ;
wire TXD;

// assign statements (if any)                          
UART_TXD i1 (
// port map - connection between master ports and signals/registers   
	.DATA_IN(DATA_IN),
	.RDCLK(RDCLK),
	.RDREQ(RDREQ),
	.RST_N(RST_N),
	.SYS_CLK(SYS_CLK),
	.TXD(TXD),
	.TX_REQ(TX_REQ)
);
 
initial 
begin
		DATA_IN = 8'hAA	;
		RST_N	= 1;
		SYS_CLK	= 0  		;
		TX_REQ	= 1	; 
		#100 RST_N	= 0;
		#10 RST_N	= 1;
		#1000 TX_REQ = 0 ; 
		#20000 TX_REQ = 1 ;
		#200 TX_REQ = 0 ;
end 
 
always
	#10 SYS_CLK = ~ SYS_CLK ;

















  
endmodule

