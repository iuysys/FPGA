// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/20/2018 13:21:46"
                                                                                
// Verilog Test Bench template for design : VGA
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module VGA_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg CACHE_RD_EN;
reg CLK_40M;
reg [15:0] DATA_IN;
reg RST_N;
// wires                                               
wire CACHE_RCLK;
wire CACHE_RREQ;
wire [15:0]  DATA_OUT;
wire HSYNC;
wire VSYNC;

// assign statements (if any)                          
VGA i1 (
// port map - connection between master ports and signals/registers   
	.CACHE_RCLK(CACHE_RCLK),
	.CACHE_RD_EN(CACHE_RD_EN),
	.CACHE_RREQ(CACHE_RREQ),
	.CLK_40M(CLK_40M),
	.DATA_IN(DATA_IN),
	.DATA_OUT(DATA_OUT),
	.HSYNC(HSYNC),
	.RST_N(RST_N),
	.VSYNC(VSYNC)
);
initial                                                
begin                                                  
	CACHE_RD_EN = 0;
	CLK_40M = 1;
	DATA_IN = 16'haf;
	RST_N = 1 ; 
	#100 RST_N = 0 ;
	#20 RST_N = 1 ;
	#1000 CACHE_RD_EN = 1 ;
	#90000000 CACHE_RD_EN = 0 ;
$display("Running testbench");                       
end    

                                                
always                                                 
begin
	#1 CLK_40M = ~CLK_40M ;														
end  


                                                  
endmodule

