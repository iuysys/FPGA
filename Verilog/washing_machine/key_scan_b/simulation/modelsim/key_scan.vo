// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "05/06/2018 21:14:37"

// 
// Device: Altera EP2C8Q208C8 Package PQFP208
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module key_scan (
	CLK,
	RST_N,
	key_s,
	key_w,
	key_p,
	key_value);
input 	CLK;
input 	RST_N;
input 	key_s;
input 	key_w;
input 	key_p;
output 	[2:0] key_value;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Mux5~2_combout ;
wire \Mux5~3_combout ;
wire \Mux2~1_combout ;
wire \Mux5~7_combout ;
wire \CLK~combout ;
wire \key_w~combout ;
wire \key_p~combout ;
wire \Mux2~2_combout ;
wire \key_s~combout ;
wire \Mux2~0_combout ;
wire \step_cnt[2]~3_combout ;
wire \RST_N~combout ;
wire \Mux2~3_combout ;
wire \step_cnt[1]~0_combout ;
wire \step_cnt[1]~1_combout ;
wire \step_cnt[1]~2_combout ;
wire \Mux5~4_combout ;
wire \Mux5~5_combout ;
wire \key_value[0]~reg0_regout ;
wire \key_value~1_combout ;
wire \Mux5~6_combout ;
wire \key_value[1]~0_combout ;
wire \Mux4~0_combout ;
wire \key_value[1]~reg0_regout ;
wire \Mux3~0_combout ;
wire \Mux3~1_combout ;
wire \key_value[2]~reg0_regout ;
wire [2:0] step_cnt;


cycloneii_lcell_comb \Mux5~2 (
// Equation(s):
// \Mux5~2_combout  = (step_cnt[1] & (\key_value[0]~reg0_regout  & (\key_p~combout ))) # (!step_cnt[1] & (((\key_w~combout ))))

	.dataa(\key_value[0]~reg0_regout ),
	.datab(\key_p~combout ),
	.datac(\key_w~combout ),
	.datad(step_cnt[1]),
	.cin(gnd),
	.combout(\Mux5~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~2 .lut_mask = 16'h88F0;
defparam \Mux5~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~3 (
// Equation(s):
// \Mux5~3_combout  = (step_cnt[0] & !step_cnt[2])

	.dataa(step_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(step_cnt[2]),
	.cin(gnd),
	.combout(\Mux5~3_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~3 .lut_mask = 16'h00AA;
defparam \Mux5~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~1 (
// Equation(s):
// \Mux2~1_combout  = (step_cnt[2] & ((step_cnt[0]) # ((!step_cnt[1] & !\key_p~combout ))))

	.dataa(step_cnt[2]),
	.datab(step_cnt[0]),
	.datac(step_cnt[1]),
	.datad(\key_p~combout ),
	.cin(gnd),
	.combout(\Mux2~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~1 .lut_mask = 16'h888A;
defparam \Mux2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~7 (
// Equation(s):
// \Mux5~7_combout  = (!step_cnt[2] & ((\Mux2~0_combout ) # ((step_cnt[0] & \Mux5~2_combout ))))

	.dataa(step_cnt[0]),
	.datab(step_cnt[2]),
	.datac(\Mux5~2_combout ),
	.datad(\Mux2~0_combout ),
	.cin(gnd),
	.combout(\Mux5~7_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~7 .lut_mask = 16'h3320;
defparam \Mux5~7 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \CLK~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CLK~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CLK));
// synopsys translate_off
defparam \CLK~I .input_async_reset = "none";
defparam \CLK~I .input_power_up = "low";
defparam \CLK~I .input_register_mode = "none";
defparam \CLK~I .input_sync_reset = "none";
defparam \CLK~I .oe_async_reset = "none";
defparam \CLK~I .oe_power_up = "low";
defparam \CLK~I .oe_register_mode = "none";
defparam \CLK~I .oe_sync_reset = "none";
defparam \CLK~I .operation_mode = "input";
defparam \CLK~I .output_async_reset = "none";
defparam \CLK~I .output_power_up = "low";
defparam \CLK~I .output_register_mode = "none";
defparam \CLK~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \key_w~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\key_w~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_w));
// synopsys translate_off
defparam \key_w~I .input_async_reset = "none";
defparam \key_w~I .input_power_up = "low";
defparam \key_w~I .input_register_mode = "none";
defparam \key_w~I .input_sync_reset = "none";
defparam \key_w~I .oe_async_reset = "none";
defparam \key_w~I .oe_power_up = "low";
defparam \key_w~I .oe_register_mode = "none";
defparam \key_w~I .oe_sync_reset = "none";
defparam \key_w~I .operation_mode = "input";
defparam \key_w~I .output_async_reset = "none";
defparam \key_w~I .output_power_up = "low";
defparam \key_w~I .output_register_mode = "none";
defparam \key_w~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \key_p~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\key_p~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_p));
// synopsys translate_off
defparam \key_p~I .input_async_reset = "none";
defparam \key_p~I .input_power_up = "low";
defparam \key_p~I .input_register_mode = "none";
defparam \key_p~I .input_sync_reset = "none";
defparam \key_p~I .oe_async_reset = "none";
defparam \key_p~I .oe_power_up = "low";
defparam \key_p~I .oe_register_mode = "none";
defparam \key_p~I .oe_sync_reset = "none";
defparam \key_p~I .operation_mode = "input";
defparam \key_p~I .output_async_reset = "none";
defparam \key_p~I .output_power_up = "low";
defparam \key_p~I .output_register_mode = "none";
defparam \key_p~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = (\Mux5~3_combout  & ((step_cnt[1] & (\key_p~combout )) # (!step_cnt[1] & ((\key_w~combout )))))

	.dataa(\Mux5~3_combout ),
	.datab(\key_p~combout ),
	.datac(\key_w~combout ),
	.datad(step_cnt[1]),
	.cin(gnd),
	.combout(\Mux2~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~2 .lut_mask = 16'h88A0;
defparam \Mux2~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \key_s~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\key_s~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_s));
// synopsys translate_off
defparam \key_s~I .input_async_reset = "none";
defparam \key_s~I .input_power_up = "low";
defparam \key_s~I .input_register_mode = "none";
defparam \key_s~I .input_sync_reset = "none";
defparam \key_s~I .oe_async_reset = "none";
defparam \key_s~I .oe_power_up = "low";
defparam \key_s~I .oe_register_mode = "none";
defparam \key_s~I .oe_sync_reset = "none";
defparam \key_s~I .operation_mode = "input";
defparam \key_s~I .output_async_reset = "none";
defparam \key_s~I .output_power_up = "low";
defparam \key_s~I .output_register_mode = "none";
defparam \key_s~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (!step_cnt[0] & ((step_cnt[1] & ((!\key_w~combout ))) # (!step_cnt[1] & (!\key_s~combout ))))

	.dataa(step_cnt[1]),
	.datab(\key_s~combout ),
	.datac(\key_w~combout ),
	.datad(step_cnt[0]),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'h001B;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \step_cnt[2]~3 (
// Equation(s):
// \step_cnt[2]~3_combout  = (step_cnt[2] & ((step_cnt[1]) # ((step_cnt[0]) # (\key_p~combout )))) # (!step_cnt[2] & (step_cnt[1] & (step_cnt[0] & !\key_p~combout )))

	.dataa(step_cnt[2]),
	.datab(step_cnt[1]),
	.datac(step_cnt[0]),
	.datad(\key_p~combout ),
	.cin(gnd),
	.combout(\step_cnt[2]~3_combout ),
	.cout());
// synopsys translate_off
defparam \step_cnt[2]~3 .lut_mask = 16'hAAE8;
defparam \step_cnt[2]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \RST_N~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\RST_N~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RST_N));
// synopsys translate_off
defparam \RST_N~I .input_async_reset = "none";
defparam \RST_N~I .input_power_up = "low";
defparam \RST_N~I .input_register_mode = "none";
defparam \RST_N~I .input_sync_reset = "none";
defparam \RST_N~I .oe_async_reset = "none";
defparam \RST_N~I .oe_power_up = "low";
defparam \RST_N~I .oe_register_mode = "none";
defparam \RST_N~I .oe_sync_reset = "none";
defparam \RST_N~I .operation_mode = "input";
defparam \RST_N~I .output_async_reset = "none";
defparam \RST_N~I .output_power_up = "low";
defparam \RST_N~I .output_register_mode = "none";
defparam \RST_N~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \step_cnt[2] (
	.clk(\CLK~combout ),
	.datain(\step_cnt[2]~3_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(step_cnt[2]));

cycloneii_lcell_comb \Mux2~3 (
// Equation(s):
// \Mux2~3_combout  = (\Mux2~1_combout ) # ((\Mux2~2_combout ) # ((\Mux2~0_combout  & !step_cnt[2])))

	.dataa(\Mux2~1_combout ),
	.datab(\Mux2~2_combout ),
	.datac(\Mux2~0_combout ),
	.datad(step_cnt[2]),
	.cin(gnd),
	.combout(\Mux2~3_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~3 .lut_mask = 16'hEEFE;
defparam \Mux2~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \step_cnt[0] (
	.clk(\CLK~combout ),
	.datain(\Mux2~3_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(step_cnt[0]));

cycloneii_lcell_comb \step_cnt[1]~0 (
// Equation(s):
// \step_cnt[1]~0_combout  = (\key_p~combout  & (((step_cnt[1] & \key_s~combout )) # (!step_cnt[0]))) # (!\key_p~combout  & (!step_cnt[0] & (step_cnt[1])))

	.dataa(\key_p~combout ),
	.datab(step_cnt[0]),
	.datac(step_cnt[1]),
	.datad(\key_s~combout ),
	.cin(gnd),
	.combout(\step_cnt[1]~0_combout ),
	.cout());
// synopsys translate_off
defparam \step_cnt[1]~0 .lut_mask = 16'hB232;
defparam \step_cnt[1]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \step_cnt[1]~1 (
// Equation(s):
// \step_cnt[1]~1_combout  = (step_cnt[0] & (((\key_p~combout  & \key_s~combout )) # (!step_cnt[1]))) # (!step_cnt[0] & (((step_cnt[1]))))

	.dataa(\key_p~combout ),
	.datab(step_cnt[0]),
	.datac(step_cnt[1]),
	.datad(\key_s~combout ),
	.cin(gnd),
	.combout(\step_cnt[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \step_cnt[1]~1 .lut_mask = 16'hBC3C;
defparam \step_cnt[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \step_cnt[1]~2 (
// Equation(s):
// \step_cnt[1]~2_combout  = (step_cnt[2] & ((\step_cnt[1]~0_combout  $ (!\step_cnt[1]~1_combout )))) # (!step_cnt[2] & (\step_cnt[1]~1_combout  & ((\step_cnt[1]~0_combout ) # (!\key_w~combout ))))

	.dataa(step_cnt[2]),
	.datab(\key_w~combout ),
	.datac(\step_cnt[1]~0_combout ),
	.datad(\step_cnt[1]~1_combout ),
	.cin(gnd),
	.combout(\step_cnt[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \step_cnt[1]~2 .lut_mask = 16'hF10A;
defparam \step_cnt[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \step_cnt[1] (
	.clk(\CLK~combout ),
	.datain(\step_cnt[1]~2_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(step_cnt[1]));

cycloneii_lcell_comb \Mux5~4 (
// Equation(s):
// \Mux5~4_combout  = (step_cnt[2] & (!step_cnt[1] & (!\key_p~combout  & !step_cnt[0])))

	.dataa(step_cnt[2]),
	.datab(step_cnt[1]),
	.datac(\key_p~combout ),
	.datad(step_cnt[0]),
	.cin(gnd),
	.combout(\Mux5~4_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~4 .lut_mask = 16'h0002;
defparam \Mux5~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~5 (
// Equation(s):
// \Mux5~5_combout  = (\Mux5~7_combout ) # ((\Mux5~4_combout ) # ((\key_value[0]~reg0_regout  & step_cnt[2])))

	.dataa(\Mux5~7_combout ),
	.datab(\Mux5~4_combout ),
	.datac(\key_value[0]~reg0_regout ),
	.datad(step_cnt[2]),
	.cin(gnd),
	.combout(\Mux5~5_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~5 .lut_mask = 16'hFEEE;
defparam \Mux5~5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \key_value[0]~reg0 (
	.clk(\CLK~combout ),
	.datain(\Mux5~5_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\key_value[0]~reg0_regout ));

cycloneii_lcell_comb \key_value~1 (
// Equation(s):
// \key_value~1_combout  = (\key_value[1]~reg0_regout  & \key_p~combout )

	.dataa(\key_value[1]~reg0_regout ),
	.datab(\key_p~combout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\key_value~1_combout ),
	.cout());
// synopsys translate_off
defparam \key_value~1 .lut_mask = 16'h8888;
defparam \key_value~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~6 (
// Equation(s):
// \Mux5~6_combout  = (step_cnt[1]) # (step_cnt[0])

	.dataa(step_cnt[1]),
	.datab(step_cnt[0]),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\Mux5~6_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~6 .lut_mask = 16'hEEEE;
defparam \Mux5~6 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \key_value[1]~0 (
// Equation(s):
// \key_value[1]~0_combout  = (\Mux5~6_combout  & (\key_value[1]~reg0_regout )) # (!\Mux5~6_combout  & ((\key_value~1_combout )))

	.dataa(\key_value[1]~reg0_regout ),
	.datab(\key_value~1_combout ),
	.datac(vcc),
	.datad(\Mux5~6_combout ),
	.cin(gnd),
	.combout(\key_value[1]~0_combout ),
	.cout());
// synopsys translate_off
defparam \key_value[1]~0 .lut_mask = 16'hAACC;
defparam \key_value[1]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (step_cnt[1] & ((\key_value~1_combout ) # ((!step_cnt[0])))) # (!step_cnt[1] & (((step_cnt[0] & !\key_w~combout ))))

	.dataa(step_cnt[1]),
	.datab(\key_value~1_combout ),
	.datac(step_cnt[0]),
	.datad(\key_w~combout ),
	.cin(gnd),
	.combout(\Mux4~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux4~0 .lut_mask = 16'h8ADA;
defparam \Mux4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \key_value[1]~reg0 (
	.clk(\CLK~combout ),
	.datain(\key_value[1]~0_combout ),
	.sdata(\Mux4~0_combout ),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(!step_cnt[2]),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\key_value[1]~reg0_regout ));

cycloneii_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (step_cnt[1] & (step_cnt[0] & !step_cnt[2])) # (!step_cnt[1] & (!step_cnt[0] & step_cnt[2]))

	.dataa(vcc),
	.datab(step_cnt[1]),
	.datac(step_cnt[0]),
	.datad(step_cnt[2]),
	.cin(gnd),
	.combout(\Mux3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = 16'h03C0;
defparam \Mux3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux3~1 (
// Equation(s):
// \Mux3~1_combout  = (\key_value[2]~reg0_regout  & ((\Mux3~0_combout ) # ((step_cnt[2])))) # (!\key_value[2]~reg0_regout  & (\Mux3~0_combout  & ((!\key_p~combout ))))

	.dataa(\key_value[2]~reg0_regout ),
	.datab(\Mux3~0_combout ),
	.datac(step_cnt[2]),
	.datad(\key_p~combout ),
	.cin(gnd),
	.combout(\Mux3~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~1 .lut_mask = 16'hA8EC;
defparam \Mux3~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \key_value[2]~reg0 (
	.clk(\CLK~combout ),
	.datain(\Mux3~1_combout ),
	.sdata(gnd),
	.aclr(!\RST_N~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\key_value[2]~reg0_regout ));

cycloneii_io \key_value[0]~I (
	.datain(\key_value[0]~reg0_regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_value[0]));
// synopsys translate_off
defparam \key_value[0]~I .input_async_reset = "none";
defparam \key_value[0]~I .input_power_up = "low";
defparam \key_value[0]~I .input_register_mode = "none";
defparam \key_value[0]~I .input_sync_reset = "none";
defparam \key_value[0]~I .oe_async_reset = "none";
defparam \key_value[0]~I .oe_power_up = "low";
defparam \key_value[0]~I .oe_register_mode = "none";
defparam \key_value[0]~I .oe_sync_reset = "none";
defparam \key_value[0]~I .operation_mode = "output";
defparam \key_value[0]~I .output_async_reset = "none";
defparam \key_value[0]~I .output_power_up = "low";
defparam \key_value[0]~I .output_register_mode = "none";
defparam \key_value[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \key_value[1]~I (
	.datain(\key_value[1]~reg0_regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_value[1]));
// synopsys translate_off
defparam \key_value[1]~I .input_async_reset = "none";
defparam \key_value[1]~I .input_power_up = "low";
defparam \key_value[1]~I .input_register_mode = "none";
defparam \key_value[1]~I .input_sync_reset = "none";
defparam \key_value[1]~I .oe_async_reset = "none";
defparam \key_value[1]~I .oe_power_up = "low";
defparam \key_value[1]~I .oe_register_mode = "none";
defparam \key_value[1]~I .oe_sync_reset = "none";
defparam \key_value[1]~I .operation_mode = "output";
defparam \key_value[1]~I .output_async_reset = "none";
defparam \key_value[1]~I .output_power_up = "low";
defparam \key_value[1]~I .output_register_mode = "none";
defparam \key_value[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \key_value[2]~I (
	.datain(\key_value[2]~reg0_regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key_value[2]));
// synopsys translate_off
defparam \key_value[2]~I .input_async_reset = "none";
defparam \key_value[2]~I .input_power_up = "low";
defparam \key_value[2]~I .input_register_mode = "none";
defparam \key_value[2]~I .input_sync_reset = "none";
defparam \key_value[2]~I .oe_async_reset = "none";
defparam \key_value[2]~I .oe_power_up = "low";
defparam \key_value[2]~I .oe_register_mode = "none";
defparam \key_value[2]~I .oe_sync_reset = "none";
defparam \key_value[2]~I .operation_mode = "output";
defparam \key_value[2]~I .output_async_reset = "none";
defparam \key_value[2]~I .output_power_up = "low";
defparam \key_value[2]~I .output_register_mode = "none";
defparam \key_value[2]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
