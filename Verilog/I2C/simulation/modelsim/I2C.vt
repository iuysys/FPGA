// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "03/13/2018 11:03:24"
                                                                                
// Verilog Test Bench template for design : I2C
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module I2C_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg CLK;
reg [23:0] DATA;
reg EN;
reg RST_N;
//reg treg_SDA;
// wires                                               
wire SCL;
wire SDA;

// assign statements (if any)                          
//assign SDA = treg_SDA;
I2C_TXD i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.DATA(DATA),
	.EN(EN),
	.RST_N(RST_N),
	.SCL(SCL),
	.SDA(SDA)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	CLK <= 0;
	DATA <= 24'b0;
	EN <= 0;
	RST_N <= 1;
//	treg_SDA <= 1 ; 
	#100 RST_N = 0 ;
	#10 RST_N = 1 ;
	#20 DATA = 24'hAA38C9;
	#20 EN = 1;
	#100 EN = 0;
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
   #1 CLK <= ~ CLK ;                                                    
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule

